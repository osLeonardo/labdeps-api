// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortalTransparenciaDeps.Infrastructure.Data;

#nullable disable

namespace PortalTransparenciaDeps.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230623173649_portalTransparenciaDB_migration1")]
    partial class portalTransparenciaDB_migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CnepFundamentacao", b =>
                {
                    b.Property<int>("CnepsId")
                        .HasColumnType("integer")
                        .HasColumnName("cneps_id");

                    b.Property<int>("FundamentacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("fundamentacao_id");

                    b.HasKey("CnepsId", "FundamentacaoId")
                        .HasName("pk_cnep_fundamentacao");

                    b.HasIndex("FundamentacaoId");

                    b.ToTable("cnep_fundamentacao");
                });

            modelBuilder.Entity("LenienciaSancoes", b =>
                {
                    b.Property<int>("LenienciasId")
                        .HasColumnType("integer")
                        .HasColumnName("leniencias_id");

                    b.Property<int>("SancoesId")
                        .HasColumnType("integer")
                        .HasColumnName("sancoes_id");

                    b.HasKey("LenienciasId", "SancoesId")
                        .HasName("pk_leniencia_sancoes");

                    b.HasIndex("SancoesId");

                    b.ToTable("leniencia_sancoes");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.ConsultaAggregate.HistoricoConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<DateOnly>("DataConsulta")
                        .HasColumnType("date")
                        .HasColumnName("data_consulta");

                    b.Property<DateOnly>("DataReferencia")
                        .HasColumnType("date")
                        .HasColumnName("data_referencia");

                    b.Property<string>("Intervalo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("intervalo");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_consulta");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_historico_consultas");

                    b.HasIndex("UserId");

                    b.ToTable("historico_consulta");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPerfil")
                        .HasColumnType("integer")
                        .HasColumnName("id_perfil");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("password");

                    b.Property<int>("PerfilUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(4)
                        .HasColumnName("perfil_usuario");

                    b.HasKey("Id")
                        .HasName("pk_user_logins");

                    b.HasIndex("IdPerfil");

                    b.ToTable("user_login");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Ordem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(999999)
                        .HasColumnName("ordem");

                    b.HasKey("Id")
                        .HasName("pk_perfis");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_agrupadores_parametrizacao");

                    b.ToTable("agrupador_parametrizacao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.ParametrizacaoMetrica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AgrupadorParametrizacaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("agrupador_parametrizacao_id");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<int?>("Idade")
                        .HasColumnType("integer")
                        .HasColumnName("idade");

                    b.Property<decimal?>("Impacto")
                        .HasColumnType("numeric")
                        .HasColumnName("impacto");

                    b.Property<int>("PerfilMetricaId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_metrica_id");

                    b.Property<decimal>("Pontuacao")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao");

                    b.Property<decimal?>("Pontualidade")
                        .HasColumnType("numeric")
                        .HasColumnName("pontualidade");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_parametrizacao_metricas");

                    b.HasIndex("AgrupadorParametrizacaoId");

                    b.HasIndex("PerfilMetricaId");

                    b.ToTable("parametrizacao_metrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("MetricaId")
                        .HasColumnType("integer")
                        .HasColumnName("metrica_id");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<decimal>("PontuacaoMaxima")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao_maxima");

                    b.Property<decimal>("PontuacaoMinima")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao_minima");

                    b.Property<int?>("Validade")
                        .HasColumnType("integer")
                        .HasColumnName("validade");

                    b.HasKey("Id")
                        .HasName("pk_perfis_metricas");

                    b.HasIndex("PerfilId");

                    b.HasIndex("MetricaId", "PerfilId")
                        .IsUnique();

                    b.ToTable("perfil_metrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BolsaFamiliaAggregate.BolsaFamilia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataMesCompetencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_mes_competencia");

                    b.Property<string>("DataMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_mes_referencia");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("integer")
                        .HasColumnName("id_municipio");

                    b.Property<int>("IdTitular")
                        .HasColumnType("integer")
                        .HasColumnName("id_titular");

                    b.Property<int>("QuantidadeDependentes")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade_dependentes");

                    b.Property<float>("Valor")
                        .HasColumnType("real")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_bolsa_familia");

                    b.HasIndex("IdMunicipio");

                    b.HasIndex("IdTitular");

                    b.ToTable("bolsa_familia");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BolsaFamiliaAggregate.TitularBolsaFamilia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("Nis")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_titular_bolsa_familia");

                    b.ToTable("titular_bolsa_familia");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BpcAggregate.BeneficiarioBpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("CpfRepresentanteLegalFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_representante_legal_formatado");

                    b.Property<string>("Nis")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis");

                    b.Property<string>("NisRepresentanteLegal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_representante_legal");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NomeRepresntanteLegal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_represntante_legal");

                    b.HasKey("Id")
                        .HasName("pk_beneficiario_bpc");

                    b.ToTable("beneficiario_bpc");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BpcAggregate.Bpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConcedidoJudicialmente")
                        .HasColumnType("boolean")
                        .HasColumnName("concedido_judicialmente");

                    b.Property<string>("DataMesCompetencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_mes_competencia");

                    b.Property<string>("DataMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_mes_referencia");

                    b.Property<int>("IdBeneficiario")
                        .HasColumnType("integer")
                        .HasColumnName("id_beneficiario");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("integer")
                        .HasColumnName("id_municipio");

                    b.Property<bool>("Menor16Anos")
                        .HasColumnType("boolean")
                        .HasColumnName("menor16_anos");

                    b.Property<float>("Valor")
                        .HasColumnType("real")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_bpc");

                    b.HasIndex("IdBeneficiario");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("bpc");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.Cepim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_referencia");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("integer")
                        .HasColumnName("id_convenio");

                    b.Property<int>("IdOrgaoSuperior")
                        .HasColumnType("integer")
                        .HasColumnName("id_orgao_superior");

                    b.Property<int>("IdPessoaJuridica")
                        .HasColumnType("integer")
                        .HasColumnName("id_pessoa_juridica");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("motivo");

                    b.HasKey("Id")
                        .HasName("pk_cepim");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdOrgaoSuperior");

                    b.HasIndex("IdPessoaJuridica");

                    b.ToTable("cepim");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.Convenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("objeto");

                    b.HasKey("Id")
                        .HasName("pk_convenio");

                    b.ToTable("convenio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoMaximo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_orgao_maximo");

                    b.ToTable("orgao_maximo");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoSuperior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<string>("CodigoSIAFI")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_siafi");

                    b.Property<string>("DescricaoPoder")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_poder");

                    b.Property<int>("IdOrgaoMaximo")
                        .HasColumnType("integer")
                        .HasColumnName("id_orgao_maximo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_orgao_superior");

                    b.HasIndex("IdOrgaoMaximo");

                    b.ToTable("orgao_superior");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Cnep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AbrangenciaDefinidaDecisaoJudicial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abrangencia_definida_decisao_judicial");

                    b.Property<string>("DataFimSancao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_fim_sancao");

                    b.Property<string>("DataInicioSancao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_inicio_sancao");

                    b.Property<string>("DataOrigemInformacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_origem_informacao");

                    b.Property<string>("DataPublicacaoSancao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_publicacao_sancao");

                    b.Property<string>("DataReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_referencia");

                    b.Property<string>("DataTransitadoJulgado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_transitado_julgado");

                    b.Property<string>("DetalhamentoPublicacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("detalhamento_publicacao");

                    b.Property<int>("IdFonteSancao")
                        .HasColumnType("integer")
                        .HasColumnName("id_fonte_sancao");

                    b.Property<int>("IdFundamentacao")
                        .HasColumnType("integer")
                        .HasColumnName("id_fundamentacao");

                    b.Property<int>("IdPessoaJuridica")
                        .HasColumnType("integer")
                        .HasColumnName("id_pessoa_juridica");

                    b.Property<int>("IdSancionado")
                        .HasColumnType("integer")
                        .HasColumnName("id_sancionado");

                    b.Property<int>("IdTipoSancao")
                        .HasColumnType("integer")
                        .HasColumnName("id_tipo_sancao");

                    b.Property<string>("InformacoesAdicionaisDoOrgaoSancionador")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("informacoes_adicionais_do_orgao_sancionador");

                    b.Property<string>("LinkPublicacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link_publicacao");

                    b.Property<string>("NumeroProcesso")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_processo");

                    b.Property<int?>("OrgaoSancionadorId")
                        .HasColumnType("integer")
                        .HasColumnName("orgao_sancionador_id");

                    b.Property<string>("TextoPublicacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("texto_publicacao");

                    b.Property<string>("ValorMulta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_multa");

                    b.HasKey("Id")
                        .HasName("pk_cnep");

                    b.HasIndex("IdFonteSancao");

                    b.HasIndex("IdPessoaJuridica");

                    b.HasIndex("IdSancionado");

                    b.HasIndex("IdTipoSancao");

                    b.HasIndex("OrgaoSancionadorId");

                    b.ToTable("cnep");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.FonteSancao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EnderecoContato")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("endereco_contato");

                    b.Property<string>("NomeExibicao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_exibicao");

                    b.Property<string>("TelefoneContato")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone_contato");

                    b.HasKey("Id")
                        .HasName("pk_fonte_sancao");

                    b.ToTable("fonte_sancao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Fundamentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("IdCnep")
                        .HasColumnType("integer")
                        .HasColumnName("id_cnep");

                    b.HasKey("Id")
                        .HasName("pk_fundamentacao");

                    b.HasIndex("IdCnep");

                    b.ToTable("fundamentacao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.OrgaoSancionador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Poder")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("poder");

                    b.Property<string>("SiglaUf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla_uf");

                    b.HasKey("Id")
                        .HasName("pk_orgao_sancionador");

                    b.ToTable("orgao_sancionador");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Sancionado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_formatado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_sancionado");

                    b.ToTable("sancionado");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.TipoSancao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoPortal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_portal");

                    b.Property<string>("DescricaoResumida")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_resumida");

                    b.HasKey("Id")
                        .HasName("pk_tipo_sancao");

                    b.ToTable("tipo_sancao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Leniencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataFimAcordo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_fim_acordo");

                    b.Property<string>("DataInicioAcordo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_inicio_acordo");

                    b.Property<int>("IdSancoes")
                        .HasColumnType("integer")
                        .HasColumnName("id_sancoes");

                    b.Property<string>("OrgaoResponsavel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("orgao_responsavel");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("SituacaoAcordo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("situacao_acordo");

                    b.HasKey("Id")
                        .HasName("pk_leniencia");

                    b.ToTable("leniencia");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Sancoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<string>("CnpjFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj_formatado");

                    b.Property<int>("IdLeniencia")
                        .HasColumnType("integer")
                        .HasColumnName("id_leniencia");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("NomeInformadoOrgaoResponsavel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_informado_orgao_responsavel");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("razao_social");

                    b.HasKey("Id")
                        .HasName("pk_sancoes");

                    b.HasIndex("IdLeniencia");

                    b.ToTable("sancoes");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_ibge");

                    b.Property<string>("CodigoRegiao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_regiao");

                    b.Property<int>("IdUf")
                        .HasColumnType("integer")
                        .HasColumnName("id_uf");

                    b.Property<string>("NomeIBGE")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_ibge");

                    b.Property<string>("NomeRegiao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_regiao");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pais");

                    b.HasKey("Id")
                        .HasName("pk_municipio");

                    b.HasIndex("IdUf");

                    b.ToTable("municipio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PepAggregate.Pep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodOrgao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cod_orgao");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<string>("DescricaoFuncao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_funcao");

                    b.Property<string>("DtFimCarencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dt_fim_carencia");

                    b.Property<string>("DtFimExercicio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dt_fim_exercicio");

                    b.Property<string>("DtInicioExercicio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dt_inicio_exercicio");

                    b.Property<string>("NivelFuncao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nivel_funcao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NomeOrgao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_orgao");

                    b.Property<string>("SiglaFuncao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla_funcao");

                    b.HasKey("Id")
                        .HasName("pk_pep");

                    b.ToTable("pep");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PessoaJuridicaAggregate.PessoaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj_formatado");

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NomeFantasiaReceita")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_fantasia_receita");

                    b.Property<string>("NumeroInscricaoSocial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_inscricao_social");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("razao_social");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("pk_pessoa_juridica");

                    b.ToTable("pessoa_juridica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PetiAggregate.BeneficiarioPeti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("Nis")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_beneficiario_peti");

                    b.ToTable("beneficiario_peti");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PetiAggregate.Peti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataDisponibilizacaoRecurso")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_disponibilizacao_recurso");

                    b.Property<string>("DataMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data_mes_referencia");

                    b.Property<int>("IdBeneficiario")
                        .HasColumnType("integer")
                        .HasColumnName("id_beneficiario");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("integer")
                        .HasColumnName("id_municipio");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("situacao");

                    b.Property<float>("Valor")
                        .HasColumnType("real")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_peti");

                    b.HasIndex("IdBeneficiario");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("peti");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.EstadoExercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_estado_exercicio");

                    b.ToTable("estado_exercicio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoFuncaoCargo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_funcao_cargo");

                    b.Property<string>("DescricaoFuncaoCargo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_funcao_cargo");

                    b.HasKey("Id")
                        .HasName("pk_funcao");

                    b.ToTable("funcao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.HonorariosAdvocaticio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRemuneracoesDTO")
                        .HasColumnType("integer")
                        .HasColumnName("id_remuneracoes_dto");

                    b.Property<string>("MensagemMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mensagem_mes_referencia");

                    b.Property<string>("MesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mes_referencia");

                    b.Property<int?>("RemuneracoesDTOId1")
                        .HasColumnType("integer")
                        .HasColumnName("remuneracoes_dtoid1");

                    b.Property<int>("Valor")
                        .HasColumnType("integer")
                        .HasColumnName("valor");

                    b.Property<string>("ValorFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_formatado");

                    b.HasKey("Id")
                        .HasName("pk_honorarios_advocaticio");

                    b.HasIndex("IdRemuneracoesDTO");

                    b.HasIndex("RemuneracoesDTOId1");

                    b.ToTable("honorarios_advocaticio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Jetons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("IdRemuneracoesDTO")
                        .HasColumnType("integer")
                        .HasColumnName("id_remuneracoes_dto");

                    b.Property<string>("MesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mes_referencia");

                    b.Property<int?>("RemuneracoesDTOId1")
                        .HasColumnType("integer")
                        .HasColumnName("remuneracoes_dtoid1");

                    b.Property<int>("Valor")
                        .HasColumnType("integer")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_jetons");

                    b.HasIndex("IdRemuneracoesDTO");

                    b.HasIndex("RemuneracoesDTOId1");

                    b.ToTable("jetons");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorExercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoOrgaoVinculado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_orgao_vinculado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NomeOrgaoVinculado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_orgao_vinculado");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_orgao_servidor_exercicio");

                    b.ToTable("orgao_servidor_exercicio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorLotacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoOrgaoVinculado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_orgao_vinculado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("NomeOrgaoVinculado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_orgao_vinculado");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_orgao_servidor_lotacao");

                    b.ToTable("orgao_servidor_lotacao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.PensionistaRepresentante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_pensionista_representante");

                    b.ToTable("pensionista_representante");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Remuneracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRemuneracoesDTO")
                        .HasColumnType("integer")
                        .HasColumnName("id_remuneracoes_dto");

                    b.Property<int>("IdServidor")
                        .HasColumnType("integer")
                        .HasColumnName("id_servidor");

                    b.HasKey("Id")
                        .HasName("pk_remuneracao");

                    b.HasIndex("IdServidor");

                    b.ToTable("remuneracao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AbateGratificacaoNatalina")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abate_gratificacao_natalina");

                    b.Property<string>("AbateGratificacaoNatalinaDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abate_gratificacao_natalina_dolar");

                    b.Property<string>("AbateRemuneracaoBasicaBruta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abate_remuneracao_basica_bruta");

                    b.Property<string>("AbateRemuneracaoBasicaBrutaDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abate_remuneracao_basica_bruta_dolar");

                    b.Property<bool>("ExisteValorMes")
                        .HasColumnType("boolean")
                        .HasColumnName("existe_valor_mes");

                    b.Property<string>("Ferias")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ferias");

                    b.Property<string>("FeriasDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ferias_dolar");

                    b.Property<string>("FundoSaude")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fundo_saude");

                    b.Property<string>("FundoSaudeDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fundo_saude_dolar");

                    b.Property<string>("GratificacaoNatalina")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gratificacao_natalina");

                    b.Property<string>("GratificacaoNatalinaDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gratificacao_natalina_dolar");

                    b.Property<int>("IdHonorariosAdvocaticio")
                        .HasColumnType("integer")
                        .HasColumnName("id_honorarios_advocaticio");

                    b.Property<int>("IdJetons")
                        .HasColumnType("integer")
                        .HasColumnName("id_jetons");

                    b.Property<int>("IdRemuneracao")
                        .HasColumnType("integer")
                        .HasColumnName("id_remuneracao");

                    b.Property<int>("IdRubrica")
                        .HasColumnType("integer")
                        .HasColumnName("id_rubrica");

                    b.Property<string>("ImpostoRetidoNaFonte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imposto_retido_na_fonte");

                    b.Property<string>("ImpostoRetidoNaFonteDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imposto_retido_na_fonte_dolar");

                    b.Property<string>("MesAno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mes_ano");

                    b.Property<string>("MesAnoPorExtenso")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mes_ano_por_extenso");

                    b.Property<string>("OutrasDeducoesObrigatorias")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("outras_deducoes_obrigatorias");

                    b.Property<string>("OutrasDeducoesObrigatoriasDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("outras_deducoes_obrigatorias_dolar");

                    b.Property<string>("OutrasRemuneracoesEventuais")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("outras_remuneracoes_eventuais");

                    b.Property<string>("OutrasRemuneracoesEventuaisDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("outras_remuneracoes_eventuais_dolar");

                    b.Property<string>("PensaoMilitar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pensao_militar");

                    b.Property<string>("PensaoMilitarDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pensao_militar_dolar");

                    b.Property<string>("PrevidenciaOficial")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("previdencia_oficial");

                    b.Property<string>("PrevidenciaOficialDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("previdencia_oficial_dolar");

                    b.Property<string>("RemuneracaoBasicaBruta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("remuneracao_basica_bruta");

                    b.Property<string>("RemuneracaoBasicaBrutaDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("remuneracao_basica_bruta_dolar");

                    b.Property<bool>("RemuneracaoEmpresaPublica")
                        .HasColumnType("boolean")
                        .HasColumnName("remuneracao_empresa_publica");

                    b.Property<string>("SkMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sk_mes_referencia");

                    b.Property<string>("TaxaOcupacaoImovelFuncional")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("taxa_ocupacao_imovel_funcional");

                    b.Property<string>("TaxaOcupacaoImovelFuncionalDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("taxa_ocupacao_imovel_funcional_dolar");

                    b.Property<string>("ValorTotalHonorariosAdvocaticios")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_total_honorarios_advocaticios");

                    b.Property<string>("ValorTotalJetons")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_total_jetons");

                    b.Property<string>("ValorTotalRemuneracaoAposDeducoes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_total_remuneracao_apos_deducoes");

                    b.Property<string>("ValorTotalRemuneracaoDolarAposDeducoes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("valor_total_remuneracao_dolar_apos_deducoes");

                    b.Property<string>("VerbasIndenizatorias")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias");

                    b.Property<string>("VerbasIndenizatoriasCivil")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_civil");

                    b.Property<string>("VerbasIndenizatoriasCivilDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_civil_dolar");

                    b.Property<string>("VerbasIndenizatoriasDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_dolar");

                    b.Property<string>("VerbasIndenizatoriasMilitar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_militar");

                    b.Property<string>("VerbasIndenizatoriasMilitarDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_militar_dolar");

                    b.Property<string>("VerbasIndenizatoriasReferentesPDV")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_referentes_pdv");

                    b.Property<string>("VerbasIndenizatoriasReferentesPDVDolar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("verbas_indenizatorias_referentes_pdvdolar");

                    b.HasKey("Id")
                        .HasName("pk_remuneracoes_dto");

                    b.HasIndex("IdRemuneracao");

                    b.ToTable("remuneracoes_dto");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Rubrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("IdRemuneracoesDTO")
                        .HasColumnType("integer")
                        .HasColumnName("id_remuneracoes_dto");

                    b.Property<int?>("RemuneracoesDTOId1")
                        .HasColumnType("integer")
                        .HasColumnName("remuneracoes_dtoid1");

                    b.Property<string>("SkMesReferencia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sk_mes_referencia");

                    b.Property<int>("Valor")
                        .HasColumnType("integer")
                        .HasColumnName("valor");

                    b.Property<int>("ValorDolar")
                        .HasColumnType("integer")
                        .HasColumnName("valor_dolar");

                    b.HasKey("Id")
                        .HasName("pk_rubrica");

                    b.HasIndex("IdRemuneracoesDTO");

                    b.HasIndex("RemuneracoesDTOId1");

                    b.ToTable("rubrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Servidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoMatriculaFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_matricula_formatado");

                    b.Property<int>("FlagAfastado")
                        .HasColumnType("integer")
                        .HasColumnName("flag_afastado");

                    b.Property<int>("IdEstadoExercicio")
                        .HasColumnType("integer")
                        .HasColumnName("id_estado_exercicio");

                    b.Property<int>("IdFuncao")
                        .HasColumnType("integer")
                        .HasColumnName("id_funcao");

                    b.Property<int>("IdOrgaoServidorExercicio")
                        .HasColumnType("integer")
                        .HasColumnName("id_orgao_servidor_exercicio");

                    b.Property<int>("IdOrgaoServidorLotacao")
                        .HasColumnType("integer")
                        .HasColumnName("id_orgao_servidor_lotacao");

                    b.Property<int>("IdPensionistaRepresentante")
                        .HasColumnType("integer")
                        .HasColumnName("id_pensionista_representante");

                    b.Property<int>("IdPessoaJuridica")
                        .HasColumnType("integer")
                        .HasColumnName("id_pessoa_juridica");

                    b.Property<int>("IdServidorAposentadoPensionista")
                        .HasColumnType("integer")
                        .HasColumnName("id_servidor_aposentado_pensionista");

                    b.Property<int>("IdServidorInativoInstuidorPensao")
                        .HasColumnType("integer")
                        .HasColumnName("id_servidor_inativo_instuidor_pensao");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("situacao");

                    b.Property<string>("TipoServidor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_servidor");

                    b.HasKey("Id")
                        .HasName("pk_servidor");

                    b.HasIndex("IdEstadoExercicio");

                    b.HasIndex("IdFuncao");

                    b.HasIndex("IdOrgaoServidorExercicio");

                    b.HasIndex("IdOrgaoServidorLotacao");

                    b.HasIndex("IdPensionistaRepresentante");

                    b.HasIndex("IdPessoaJuridica");

                    b.HasIndex("IdServidorInativoInstuidorPensao");

                    b.ToTable("servidor");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.ServidorInativoInstuidorPensao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfFormatado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_formatado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_servidor_inativo_instuidor_pensao");

                    b.ToTable("servidor_inativo_instuidor_pensao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.UfAggregate.Uf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sigla");

                    b.HasKey("Id")
                        .HasName("pk_uf");

                    b.ToTable("uf");
                });

            modelBuilder.Entity("CnepFundamentacao", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Cnep", null)
                        .WithMany()
                        .HasForeignKey("CnepsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_fundamentacao_cnep_cneps_id");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Fundamentacao", null)
                        .WithMany()
                        .HasForeignKey("FundamentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_fundamentacao_fundamentacao_fundamentacao_id");
                });

            modelBuilder.Entity("LenienciaSancoes", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Leniencia", null)
                        .WithMany()
                        .HasForeignKey("LenienciasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_leniencia_sancoes_leniencia_leniencias_id");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Sancoes", null)
                        .WithMany()
                        .HasForeignKey("SancoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_leniencia_sancoes_sancoes_sancoes_id");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.ConsultaAggregate.HistoricoConsulta", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", "User")
                        .WithMany("Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_historico_consultas_user_logins_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", "Perfil")
                        .WithMany("Logins")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_user_logins_perfis_id_perfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.ParametrizacaoMetrica", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", "AgrupadorParametrizacao")
                        .WithMany("ParametrizacoesMetrica")
                        .HasForeignKey("AgrupadorParametrizacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_parametrizacao_metricas_agrupador_parametrizacao_agrupador_pa~");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", "PerfilMetrica")
                        .WithMany("ParametrizacoesMetrica")
                        .HasForeignKey("PerfilMetricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_parametrizacao_metricas_perfis_metricas_perfil_metrica_id");

                    b.Navigation("AgrupadorParametrizacao");

                    b.Navigation("PerfilMetrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", "Perfil")
                        .WithMany("PerfilMetricas")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_perfis_metricas_perfil_perfil_id");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BolsaFamiliaAggregate.BolsaFamilia", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", "Municipio")
                        .WithMany("BolsasFamilia")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bolsa_familia_municipio_id_municipio");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BolsaFamiliaAggregate.TitularBolsaFamilia", "Titular")
                        .WithMany("BolsasFamilia")
                        .HasForeignKey("IdTitular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bolsa_familia_titular_bolsa_familia_id_titular");

                    b.Navigation("Municipio");

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BpcAggregate.Bpc", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BpcAggregate.BeneficiarioBpc", "Beneficiario")
                        .WithMany("Bpcs")
                        .HasForeignKey("IdBeneficiario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bpc_beneficiario_bpc_id_beneficiario");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", "Municipio")
                        .WithMany("Bpcs")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bpc_municipio_id_municipio");

                    b.Navigation("Beneficiario");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.Cepim", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.Convenio", "Convenio")
                        .WithMany("Cepims")
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cepim_convenio_id_convenio");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoSuperior", "OrgaoSuperior")
                        .WithMany("Cepims")
                        .HasForeignKey("IdOrgaoSuperior")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cepim_orgao_superior_id_orgao_superior");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PessoaJuridicaAggregate.PessoaJuridica", "PessoaJuridica")
                        .WithMany("Cepims")
                        .HasForeignKey("IdPessoaJuridica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cepim_pessoa_juridica_id_pessoa_juridica");

                    b.Navigation("Convenio");

                    b.Navigation("OrgaoSuperior");

                    b.Navigation("PessoaJuridica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoSuperior", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoMaximo", "OrgaoMaximo")
                        .WithMany("OrgaosSuperior")
                        .HasForeignKey("IdOrgaoMaximo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orgao_superior_orgao_maximo_id_orgao_maximo");

                    b.Navigation("OrgaoMaximo");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Cnep", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.FonteSancao", "FonteSancao")
                        .WithMany("Cneps")
                        .HasForeignKey("IdFonteSancao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_fonte_sancao_id_fonte_sancao");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PessoaJuridicaAggregate.PessoaJuridica", "PessoaJuridica")
                        .WithMany("Cneps")
                        .HasForeignKey("IdPessoaJuridica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_pessoa_juridica_id_pessoa_juridica");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Sancionado", "Sancionado")
                        .WithMany("Cneps")
                        .HasForeignKey("IdSancionado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_sancionado_id_sancionado");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.TipoSancao", "TipoSancao")
                        .WithMany("Cneps")
                        .HasForeignKey("IdTipoSancao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cnep_tipo_sancao_id_tipo_sancao");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.OrgaoSancionador", "OrgaoSancionador")
                        .WithMany("Cneps")
                        .HasForeignKey("OrgaoSancionadorId")
                        .HasConstraintName("fk_cnep_orgao_sancionador_orgao_sancionador_id");

                    b.Navigation("FonteSancao");

                    b.Navigation("OrgaoSancionador");

                    b.Navigation("PessoaJuridica");

                    b.Navigation("Sancionado");

                    b.Navigation("TipoSancao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Fundamentacao", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Cnep", "Cnep")
                        .WithMany("Fundamentacoes")
                        .HasForeignKey("IdCnep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_fundamentacao_cnep_id_cnep");

                    b.Navigation("Cnep");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Sancoes", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Leniencia", "Leniencia")
                        .WithMany("SancoesLista")
                        .HasForeignKey("IdLeniencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sancoes_leniencia_id_leniencia");

                    b.Navigation("Leniencia");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.UfAggregate.Uf", "Uf")
                        .WithMany("Municipios")
                        .HasForeignKey("IdUf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_municipio_uf_id_uf");

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PetiAggregate.Peti", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PetiAggregate.BeneficiarioPeti", "Beneficiario")
                        .WithMany("Petis")
                        .HasForeignKey("IdBeneficiario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peti_beneficiario_peti_id_beneficiario");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", "Municipio")
                        .WithMany("Petis")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_peti_municipio_id_municipio");

                    b.Navigation("Beneficiario");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.HonorariosAdvocaticio", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", "RemuneracoesDTO")
                        .WithMany("HonorariosAdvocaticiosLista")
                        .HasForeignKey("IdRemuneracoesDTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_honorarios_advocaticio_remuneracoes_dto_id_remuneracoes_dto");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", null)
                        .WithMany("HonorariosAdvocaticios")
                        .HasForeignKey("RemuneracoesDTOId1")
                        .HasConstraintName("fk_honorarios_advocaticio_remuneracoes_dto_remuneracoes_dtoid1");

                    b.Navigation("RemuneracoesDTO");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Jetons", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", "RemuneracoesDTO")
                        .WithMany("JetonsLista")
                        .HasForeignKey("IdRemuneracoesDTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_jetons_remuneracoes_dto_id_remuneracoes_dto");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", null)
                        .WithMany("Jetons")
                        .HasForeignKey("RemuneracoesDTOId1")
                        .HasConstraintName("fk_jetons_remuneracoes_dto_remuneracoes_dtoid1");

                    b.Navigation("RemuneracoesDTO");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Remuneracao", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Servidor", "Servidor")
                        .WithMany("Remuneracoes")
                        .HasForeignKey("IdServidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_remuneracao_servidor_id_servidor");

                    b.Navigation("Servidor");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Remuneracao", "Remuneracao")
                        .WithMany("RemuneracoesDTOs")
                        .HasForeignKey("IdRemuneracao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_remuneracoes_dto_remuneracao_id_remuneracao");

                    b.Navigation("Remuneracao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Rubrica", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", "RemuneracoesDTO")
                        .WithMany("RubricaLista")
                        .HasForeignKey("IdRemuneracoesDTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rubrica_remuneracoes_dto_id_remuneracoes_dto");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", null)
                        .WithMany("Rubricas")
                        .HasForeignKey("RemuneracoesDTOId1")
                        .HasConstraintName("fk_rubrica_remuneracoes_dto_remuneracoes_dtoid1");

                    b.Navigation("RemuneracoesDTO");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Servidor", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.EstadoExercicio", "EstadoExercicio")
                        .WithMany("Servidores")
                        .HasForeignKey("IdEstadoExercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_estado_exercicio_id_estado_exercicio");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Funcao", "Funcao")
                        .WithMany("Servidores")
                        .HasForeignKey("IdFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_funcao_id_funcao");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorExercicio", "OrgaoServidorExercicio")
                        .WithMany("Servidores")
                        .HasForeignKey("IdOrgaoServidorExercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_orgao_servidor_exercicio_id_orgao_servidor_exercicio");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorLotacao", "OrgaoServidorLotacao")
                        .WithMany("Servidores")
                        .HasForeignKey("IdOrgaoServidorLotacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_orgao_servidor_lotacao_id_orgao_servidor_lotacao");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.PensionistaRepresentante", "PensionistaRepresentante")
                        .WithMany("Servidores")
                        .HasForeignKey("IdPensionistaRepresentante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_pensionista_representante_id_pensionista_representan~");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PessoaJuridicaAggregate.PessoaJuridica", "PessoaJuridica")
                        .WithMany("Servidores")
                        .HasForeignKey("IdPessoaJuridica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_pessoa_juridica_id_pessoa_juridica");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.ServidorInativoInstuidorPensao", "ServidorInativoInstuidorPensao")
                        .WithMany("Servidores")
                        .HasForeignKey("IdServidorInativoInstuidorPensao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_servidor_servidor_inativo_instuidor_pensao_id_servidor_inativo_in~");

                    b.Navigation("EstadoExercicio");

                    b.Navigation("Funcao");

                    b.Navigation("OrgaoServidorExercicio");

                    b.Navigation("OrgaoServidorLotacao");

                    b.Navigation("PensionistaRepresentante");

                    b.Navigation("PessoaJuridica");

                    b.Navigation("ServidorInativoInstuidorPensao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", b =>
                {
                    b.Navigation("Logins");

                    b.Navigation("PerfilMetricas");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", b =>
                {
                    b.Navigation("ParametrizacoesMetrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.Navigation("ParametrizacoesMetrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BolsaFamiliaAggregate.TitularBolsaFamilia", b =>
                {
                    b.Navigation("BolsasFamilia");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.BpcAggregate.BeneficiarioBpc", b =>
                {
                    b.Navigation("Bpcs");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.Convenio", b =>
                {
                    b.Navigation("Cepims");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoMaximo", b =>
                {
                    b.Navigation("OrgaosSuperior");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CepimAggregate.OrgaoSuperior", b =>
                {
                    b.Navigation("Cepims");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Cnep", b =>
                {
                    b.Navigation("Fundamentacoes");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.FonteSancao", b =>
                {
                    b.Navigation("Cneps");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.OrgaoSancionador", b =>
                {
                    b.Navigation("Cneps");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.Sancionado", b =>
                {
                    b.Navigation("Cneps");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.CnepAggregate.TipoSancao", b =>
                {
                    b.Navigation("Cneps");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.LenienciaAggregate.Leniencia", b =>
                {
                    b.Navigation("SancoesLista");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.MunicipioAggregate.Municipio", b =>
                {
                    b.Navigation("BolsasFamilia");

                    b.Navigation("Bpcs");

                    b.Navigation("Petis");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PessoaJuridicaAggregate.PessoaJuridica", b =>
                {
                    b.Navigation("Cepims");

                    b.Navigation("Cneps");

                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.PetiAggregate.BeneficiarioPeti", b =>
                {
                    b.Navigation("Petis");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.EstadoExercicio", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Funcao", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorExercicio", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.OrgaoServidorLotacao", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.PensionistaRepresentante", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Remuneracao", b =>
                {
                    b.Navigation("RemuneracoesDTOs");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.RemuneracoesDTO", b =>
                {
                    b.Navigation("HonorariosAdvocaticios");

                    b.Navigation("HonorariosAdvocaticiosLista");

                    b.Navigation("Jetons");

                    b.Navigation("JetonsLista");

                    b.Navigation("RubricaLista");

                    b.Navigation("Rubricas");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.Servidor", b =>
                {
                    b.Navigation("Remuneracoes");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.RemuneracaoAggregate.ServidorInativoInstuidorPensao", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PortalTransparenciaEntities.UfAggregate.Uf", b =>
                {
                    b.Navigation("Municipios");
                });
#pragma warning restore 612, 618
        }
    }
}
