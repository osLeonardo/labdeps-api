// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortalTransparenciaDeps.Infrastructure.Data;

#nullable disable

namespace PortalTransparenciaDeps.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230621195400_CnaesSecundario")]
    partial class CnaesSecundario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.ConsultaAggregate.HistoricoConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<DateOnly>("DataConsulta")
                        .HasColumnType("date")
                        .HasColumnName("data_consulta");

                    b.Property<DateOnly>("DataReferencia")
                        .HasColumnType("date")
                        .HasColumnName("data_referencia");

                    b.Property<string>("Intervalo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("intervalo");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_consulta");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_historico_consultas");

                    b.HasIndex("UserId");

                    b.ToTable("historico_consulta");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.CnaesSecundario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnaes_Secundarios")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cnaes_secundarios");

                    b.Property<int>("IdDado")
                        .HasColumnType("integer")
                        .HasColumnName("id_dado");

                    b.HasKey("Id")
                        .HasName("pk_cnaes_secundarios");

                    b.HasIndex("IdDado");

                    b.ToTable("cnaes_secundario");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Dados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CapitalSocialEmpresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("capital_social_empresa");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cep");

                    b.Property<string>("CnaePrincipal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cnae_principal");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CnpjMatriz")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cnpj_matriz");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.Property<string>("CorreioEletronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("correio_eletronico");

                    b.Property<string>("DataExclusaoOpcaoPeloSimples")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("data_exclusao_opcao_pelo_simples");

                    b.Property<string>("DataInicioAtividade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("data_inicio_atividade");

                    b.Property<string>("DataInicioAtividadeMatriz")
                        .HasColumnType("text")
                        .HasColumnName("data_inicio_atividade_matriz");

                    b.Property<string>("DataOpcaoPeloSimples")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("data_opcao_pelo_simples");

                    b.Property<string>("DataSituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("data_situacao_cadastral");

                    b.Property<string>("DataSituacaoEspecial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("data_situacao_especial");

                    b.Property<string>("DescricaoTipoLogradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao_tipo_logradouro");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fax");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("logradouro");

                    b.Property<string>("MotivoSituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("motivo_situacao_cadastral");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("municipio");

                    b.Property<string>("MunicipioCodigoIbge")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("municipio_codigo_ibge");

                    b.Property<string>("NaturezaJuridica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("natureza_juridica");

                    b.Property<string>("NomeCidadeExterior")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_cidade_exterior");

                    b.Property<string>("NomeEnteFederativo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_ente_federativo");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome_pais");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("numero");

                    b.Property<string>("OpcaoMei")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("opcao_mei");

                    b.Property<string>("OpcaoPeloSimples")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("opcao_pelo_simples");

                    b.Property<string>("Porte")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("porte");

                    b.Property<string>("QualificacaoResponsavel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("qualificacao_responsavel");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("razao_social");

                    b.Property<string>("SituacaoCadastral")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("situacao_cadastral");

                    b.Property<string>("SituacaoEspecial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("situacao_especial");

                    b.Property<string>("Telefone01")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("telefone01");

                    b.Property<string>("Telefone02")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("telefone02");

                    b.Property<string>("TipoUnidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tipo_unidade");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id")
                        .HasName("pk_dados");

                    b.ToTable("dados");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("documento");

                    b.Property<int>("IdDado")
                        .HasColumnType("integer")
                        .HasColumnName("id_dado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Qualificacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("qualificacao");

                    b.HasKey("Id")
                        .HasName("pk_socios");

                    b.HasIndex("IdDado");

                    b.ToTable("socio");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPerfil")
                        .HasColumnType("integer")
                        .HasColumnName("id_perfil");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("password");

                    b.Property<int>("PerfilUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(4)
                        .HasColumnName("perfil_usuario");

                    b.HasKey("Id")
                        .HasName("pk_user_logins");

                    b.HasIndex("IdPerfil");

                    b.ToTable("user_login");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Ordem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(999999)
                        .HasColumnName("ordem");

                    b.HasKey("Id")
                        .HasName("pk_perfis");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id")
                        .HasName("pk_agrupadores_parametrizacao");

                    b.ToTable("agrupador_parametrizacao");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.ParametrizacaoMetrica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AgrupadorParametrizacaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("agrupador_parametrizacao_id");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<int?>("Idade")
                        .HasColumnType("integer")
                        .HasColumnName("idade");

                    b.Property<decimal?>("Impacto")
                        .HasColumnType("numeric")
                        .HasColumnName("impacto");

                    b.Property<int>("PerfilMetricaId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_metrica_id");

                    b.Property<decimal>("Pontuacao")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao");

                    b.Property<decimal?>("Pontualidade")
                        .HasColumnType("numeric")
                        .HasColumnName("pontualidade");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_parametrizacao_metricas");

                    b.HasIndex("AgrupadorParametrizacaoId");

                    b.HasIndex("PerfilMetricaId");

                    b.ToTable("parametrizacao_metrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("MetricaId")
                        .HasColumnType("integer")
                        .HasColumnName("metrica_id");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<decimal>("PontuacaoMaxima")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao_maxima");

                    b.Property<decimal>("PontuacaoMinima")
                        .HasColumnType("numeric")
                        .HasColumnName("pontuacao_minima");

                    b.Property<int?>("Validade")
                        .HasColumnType("integer")
                        .HasColumnName("validade");

                    b.HasKey("Id")
                        .HasName("pk_perfis_metricas");

                    b.HasIndex("PerfilId");

                    b.HasIndex("MetricaId", "PerfilId")
                        .IsUnique();

                    b.ToTable("perfil_metrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.ConsultaAggregate.HistoricoConsulta", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", "User")
                        .WithMany("Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_historico_consultas_user_logins_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.CnaesSecundario", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Dados", "Dados")
                        .WithMany("CnaesSecundarios")
                        .HasForeignKey("IdDado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cnaes_secundarios_dados_id_dado");

                    b.Navigation("Dados");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Socio", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Dados", "dado")
                        .WithMany("Socios")
                        .HasForeignKey("IdDado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_socios_dados_id_dado");

                    b.Navigation("dado");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", "Perfil")
                        .WithMany("Logins")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_user_logins_perfis_id_perfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.ParametrizacaoMetrica", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", "AgrupadorParametrizacao")
                        .WithMany("ParametrizacoesMetrica")
                        .HasForeignKey("AgrupadorParametrizacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_parametrizacao_metricas_agrupador_parametrizacao_agrupador_pa~");

                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", "PerfilMetrica")
                        .WithMany("ParametrizacoesMetrica")
                        .HasForeignKey("PerfilMetricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_parametrizacao_metricas_perfis_metricas_perfil_metrica_id");

                    b.Navigation("AgrupadorParametrizacao");

                    b.Navigation("PerfilMetrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.HasOne("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", "Perfil")
                        .WithMany("PerfilMetricas")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_perfis_metricas_perfil_perfil_id");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.DadosPublicosAggregate.Dados", b =>
                {
                    b.Navigation("CnaesSecundarios");

                    b.Navigation("Socios");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.LoginAggregate.UserLogin", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilAggregate.Perfil", b =>
                {
                    b.Navigation("Logins");

                    b.Navigation("PerfilMetricas");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.AgrupadorParametrizacao", b =>
                {
                    b.Navigation("ParametrizacoesMetrica");
                });

            modelBuilder.Entity("PortalTransparenciaDeps.Core.Entities.PerfilMetricaAggregate.PerfilMetrica", b =>
                {
                    b.Navigation("ParametrizacoesMetrica");
                });
#pragma warning restore 612, 618
        }
    }
}
